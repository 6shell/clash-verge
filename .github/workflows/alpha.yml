name: Alpha CI

on:
  push:
    branches: [alpha]
  pull_request:
    branches: [alpha]

env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  release:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    if: startsWith(github.repository, 'zzzgydi')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@ce325b60658c1b38465c06cc965b79baf32c1e72

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install Dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libappindicator3-dev librsvg2-dev libayatana-appindicator3-dev

      - name: Get yarn cache dir path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn Cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install and check
        run: |
          yarn install --network-timeout 1000000
          yarn run check --meta

      # - name: Tauri build
      #   uses: tauri-apps/tauri-action@v0
      #   # enable cache even though failed
      #   continue-on-error: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      #     TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      #   with:
      #     tagName: alpha
      #     releaseName: "Clash Verge Alpha"
      #     releaseBody: "Alpha Version"
      #     releaseDraft: false
      #     prerelease: true

      # - name: Green zip bundle
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     yarn run portable
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tauri build Meta
        uses: tauri-apps/tauri-action@v0
        # enable cache even though failed
        # continue-on-error: true
        env:
          VITE_MULTI_CORE: 1
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: alpha
          configPath: tauri.meta.json
          releaseName: "Clash Verge Alpha"
          releaseBody: "Alpha Version"
          releaseDraft: false
          prerelease: true
